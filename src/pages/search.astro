---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
import type { LostObjectAPI, ValidPlaces } from "../types/lost_object";

const lo_res = await fetch("http://127.0.0.1:8000/lost_object");
const p_res = await fetch("http://127.0.0.1:8000/lost_object/places");

let { LostObjects } = (await lo_res.json()) as LostObjectAPI;
const { Places } = (await p_res.json()) as ValidPlaces;
let i = 1;

const a = Astro.request
if (a.method == 'POST')
{
    const data= (await(a.text()));
    const decodedData = decodeURIComponent(data);
    console.log(decodedData);
    let datas = decodedData.split("&").map(e => e.split("=").map(c => c.replace("+", " ")));
    console.log(datas);
    console.log(datas.length);
    if(datas.length == 1)
    {
        datas.unshift(["0","0"]);
    }
    console.log(datas);
    const place = datas[0][1];
    const object = datas[1][1]; 
    console.log(place, object);
    if (place != "0" && object != "") {
        const res = await fetch("http://127.0.0.1:8000/lost_object/by_name/" + object);
        const fullResponse = await res.json();
        // @ts-ignore
        LostObjects = fullResponse.filter((e) => e.place == place);
    }
    else if (place == "0" && object != "")
    {
        const res = await fetch("http://127.0.0.1:8000/lost_object/by_name/" + object);
        const fullResponse = await res.json();
        LostObjects = fullResponse;
    }
    else if (place != "0" && object == "")
    {
        const res = await fetch("http://127.0.0.1:8000/lost_object/by_place/" + place);
        const fullResponse = await res.json();
        LostObjects = fullResponse;
    }
}
---

<script>
    //functions
    function isLostObject(lostObject: string):boolean {
        return (/^[a-zA-Z\s]{1,50}$/.test(lostObject) && lostObject.length <= 50) || lostObject.length == 0;
    }

    //variables from html
    const faculty = document.getElementById("place") as HTMLInputElement;
    const lostObject = document.getElementById("search-bar") as HTMLInputElement;
    const filter = document.getElementById("filter") as HTMLButtonElement;
    const reportButton = document.getElementById(
        "reportButton",
    ) as HTMLButtonElement;

    reportButton.onclick = function () {
        window.location.href = "/report";
    };

    if (filter == null) {
        console.log("ERROR MAXIMO");
    } else {
        filter.addEventListener("click", (e) => {
            if (!isLostObject(lostObject.value)) {
                e.preventDefault();
                alert("Ingresa un objeto valido solo letras y espacios");
                return;
            }
        });
    }
</script>

<Layout title="search">
    <div class="container">
        <div class="row justify-content-center">
            <form method='POST' id="search-form"
                class="col-10 text-light text-center bg-translucid rounded-4 justify-content-center"
            >
                <div class="d-flex gap-5 flex-column flex-md-row">
                    <label
                        for="place"
                        class="d-flex flex-column justify-content-around"
                    >
                        Faculty
                        <select id="place" name="place" class="input-button">
                            <option value='0' disabled selected
                                >-- Selecciona una facultad --</option
                            >
                            {
                                Places.map((p) => (
                                    <option value={i++}>{p.faculty}</option>
                                ))
                            }
                        </select>
                    </label>
                    <label
                        for="search-bar"
                        class="d-flex flex-column justify-content-around"
                    >
                        Lost Object
                        <input
                            type="text"
                            name="search-bar"
                            placeholder="Tupper"
                            id="search-bar"
                            class="input-button"
                        />
                    </label>
                </div>
                <button type="submit" class="button" id="filter">Filter</button>
            </form>
        </div>
        <div class="row justify-content-center">
            <div class="objects-box col-10">
                {
                    //page changes by filter
                    LostObjects?.map((lo) => (
                        <Card
                            name={lo.object_name}
                            place={
                                Places.find((e) => e.id == lo.place)?.faculty
                            }
                            photo={lo.img}
                            important={lo.important}
                        />
                    ))
                }
            </div>
        </div>
        <div class="lost-something bg-important rounded-4 text-light fw-bold">
            <p class="font-urbanist text-center mt-2">You lost someting?</p>
            <button type="button" class="button" id="reportButton"
                >Report Here</button
            >
        </div>
    </div>
</Layout>
<style>
    form {
        margin: 5rem 0;
        padding: 2rem;
        font-size: 1.7rem;
        display: grid;
        grid-template-rows: 3fr 1fr;
        gap: 1.5rem;
        justify-items: center;
    }
    label {
        font-size: 1.5rem;
        height: 3rem;
    }
    input,
    button,
    select {
        font-size: 1rem;
    }

    select > option {
        font-size: 1rem;
        background-color: #1a1a1a;
    }

    .objects-box {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        grid-template-rows: repeat(2, 1fr);
        justify-content: center;
        gap: 2rem;
        margin-top: 2rem;
    }
    .lost-something {
        width: fit-content;
        margin: 2rem auto;
        padding: 1rem;
    }
</style>
